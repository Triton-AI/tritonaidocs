{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"jetson_docker/","text":"Docker Guide for Jetson Xavier NX Essential Docker Commands To start an existing container which is stopped docker start <container-name/ID> To stop a running container docker stop <container-name/ID> Then to login to the interactive shell of a container docker exec -it <container-name/ID> bash To start an existing container and attach to it in one command docker start -ai <container-name/ID> Specifications for Docker Commands docker run The docker run command first creates a writeable container layer over the specified image, and then starts it using the specified command. # Create and run a new container from an image with image_name and tag sudo docker run --runtime nvidia -it --rm --network=host image_name:tag # OR # Create and run a new container from an image with image_id sudo docker run --runtime nvidia -it --rm --network=host image_id","title":"Jetson Docker"},{"location":"jetson_docker/#docker-guide-for-jetson-xavier-nx","text":"","title":"Docker Guide for Jetson Xavier NX"},{"location":"jetson_docker/#essential-docker-commands","text":"To start an existing container which is stopped docker start <container-name/ID> To stop a running container docker stop <container-name/ID> Then to login to the interactive shell of a container docker exec -it <container-name/ID> bash To start an existing container and attach to it in one command docker start -ai <container-name/ID>","title":"Essential Docker Commands"},{"location":"jetson_docker/#specifications-for-docker-commands","text":"","title":"Specifications for Docker Commands"},{"location":"jetson_docker/#docker-run","text":"The docker run command first creates a writeable container layer over the specified image, and then starts it using the specified command. # Create and run a new container from an image with image_name and tag sudo docker run --runtime nvidia -it --rm --network=host image_name:tag # OR # Create and run a new container from an image with image_id sudo docker run --runtime nvidia -it --rm --network=host image_id","title":"docker run"},{"location":"jetson_setup/","text":"Adapted from UCSD MAE/ECE148 Robocar Setup Equipments What you need: Jetson Xavier NX Jetson itself 19V Power Cable Jumper Wire Computer with Ubuntu 22.04 (Tested) Computer Peripherals Keyboard Mouse HDMI Cable Micro-USB to USB-A cable Computer Monitor Let it into Force Recovery Mode Ensure the following: Device powered off. Power adapter disconnected. Place a jumper wire cable across the Force Recovery Mode pins. Pins 9 [GND] and 10 [FC REC] of the Button Header [J14]. Connect your host computer to the device's USB Micro-B connector. Connect the power adapter to the Power Jack [J16]. The device will automatically power on in Force Recovery Mode. Execute on your host PC's terminal lsusb command. You will see the following output to confirm that the Jetson is in recovery mode: Bus 001 Device 010: ID 0955:7e19 NVidia Corp. Take off the jumper wire cable Flash the Jetson On your laptop, with the Jetson connected, do the following. git clone https://github.com/jetsonhacks/bootFromExternalStorage.git cd bootFromExternalStorage chmod u+x get_jetson_files.sh chmod u+x flash_jetson_external_storage.sh source get_jetson_files.sh cd R35.1/Linux_for_Tegra/nvsdkmanager_flash.sh In vim, type :%s/flash_l4t_t194_nvme.xml/flash_l4t_external.xml/g<enter> Then, type in :wq<enter> . This will replace all occurrences of flash_l4t_t194_nvme.xml to flash_l4t_external.xml cd ../.. source flash_jetson_external_storage.sh # Will take some time. # Should reboot JNX after the script is complete. # Otherwise, power cycle it Set up Jetson via GUI Connect the JNX to a monitor, keyboard, mouse, and ethernet for internet access and finish the OEM installation Your name: jetson Your Computer's Name: ucsdrobocar-color Password: jetsonucsd Use the APP partition size to the max of the storage SSD (the default option\u2026) Change the power mode to 20W 6 cores Connect to the Jetson Two ways: Connect to the same network (presumably UCSDRobocar), run ssh jetson@ucsdrobocar-color Connect via USB cable to the jetson. In the terminal, run ssh jetson@191.168.55.1 Install Jetpack On Jetson, run df -h . We should have something like this: Filesystem Size Used Avail Use% Mounted on /dev/nvme0n1p1 458G 5.8G 434G 2% / none 3.4G 0 3.4G 0% /dev tmpfs 3.4G 0 3.4G 0% /dev/shm tmpfs 685M 19M 667M 3% /run tmpfs 5.0M 4.0K 5.0M 1% /run/lock tmpfs 3.4G 0 3.4G 0% /sys/fs/cgroup tmpfs 685M 16K 685M 1% /run/user/124 tmpfs 685M 8.0K 685M 1% /run/user/1000 sudo apt update sudo apt upgrade sudo apt install nvidia-jetpack","title":"Jetson Setup"},{"location":"jetson_setup/#equipments","text":"What you need: Jetson Xavier NX Jetson itself 19V Power Cable Jumper Wire Computer with Ubuntu 22.04 (Tested) Computer Peripherals Keyboard Mouse HDMI Cable Micro-USB to USB-A cable Computer Monitor","title":"Equipments"},{"location":"jetson_setup/#let-it-into-force-recovery-mode","text":"Ensure the following: Device powered off. Power adapter disconnected. Place a jumper wire cable across the Force Recovery Mode pins. Pins 9 [GND] and 10 [FC REC] of the Button Header [J14]. Connect your host computer to the device's USB Micro-B connector. Connect the power adapter to the Power Jack [J16]. The device will automatically power on in Force Recovery Mode. Execute on your host PC's terminal lsusb command. You will see the following output to confirm that the Jetson is in recovery mode: Bus 001 Device 010: ID 0955:7e19 NVidia Corp. Take off the jumper wire cable","title":"Let it into Force Recovery Mode"},{"location":"jetson_setup/#flash-the-jetson","text":"On your laptop, with the Jetson connected, do the following. git clone https://github.com/jetsonhacks/bootFromExternalStorage.git cd bootFromExternalStorage chmod u+x get_jetson_files.sh chmod u+x flash_jetson_external_storage.sh source get_jetson_files.sh cd R35.1/Linux_for_Tegra/nvsdkmanager_flash.sh In vim, type :%s/flash_l4t_t194_nvme.xml/flash_l4t_external.xml/g<enter> Then, type in :wq<enter> . This will replace all occurrences of flash_l4t_t194_nvme.xml to flash_l4t_external.xml cd ../.. source flash_jetson_external_storage.sh # Will take some time. # Should reboot JNX after the script is complete. # Otherwise, power cycle it","title":"Flash the Jetson"},{"location":"jetson_setup/#set-up-jetson-via-gui","text":"Connect the JNX to a monitor, keyboard, mouse, and ethernet for internet access and finish the OEM installation Your name: jetson Your Computer's Name: ucsdrobocar-color Password: jetsonucsd Use the APP partition size to the max of the storage SSD (the default option\u2026) Change the power mode to 20W 6 cores","title":"Set up Jetson via GUI"},{"location":"jetson_setup/#connect-to-the-jetson","text":"Two ways: Connect to the same network (presumably UCSDRobocar), run ssh jetson@ucsdrobocar-color Connect via USB cable to the jetson. In the terminal, run ssh jetson@191.168.55.1","title":"Connect to the Jetson"},{"location":"jetson_setup/#install-jetpack","text":"On Jetson, run df -h . We should have something like this: Filesystem Size Used Avail Use% Mounted on /dev/nvme0n1p1 458G 5.8G 434G 2% / none 3.4G 0 3.4G 0% /dev tmpfs 3.4G 0 3.4G 0% /dev/shm tmpfs 685M 19M 667M 3% /run tmpfs 5.0M 4.0K 5.0M 1% /run/lock tmpfs 3.4G 0 3.4G 0% /sys/fs/cgroup tmpfs 685M 16K 685M 1% /run/user/124 tmpfs 685M 8.0K 685M 1% /run/user/1000 sudo apt update sudo apt upgrade sudo apt install nvidia-jetpack","title":"Install Jetpack"},{"location":"tmux_intro/","text":"Tmux Why Ability to open multiple terminals in a single window without having to ssh multiple times. Ability to detach without stopping a running process. Installation sudo apt install tmux Basic Usage tmux in a terminal At the bottom, you can see your session name (e.g., [0] ), and your window name (e.g., 3: bash ). There are sessions, windows, and panes. Sessions are browser windows Windows are like browser tabs Panes split windows Useful Commands All commands will be Ctrl+B and another key. You can tell what pane you are in by the borders being not white. Pane commands Ctrl+b % : Split window horizontally Ctrl+b \" : Split window vertically Ctrl+b <direction> : Move between panes in the specific direction using arrow keys Ctrl+b z : Zoom in/out of a pane Ctrl+b [ : Start scrollback in pane Ctrl+b x : Remove current pane, will ask for Y/N in the bottom status bar Window commands Ctrl+b c : Create a new window Ctrl+b p : Go to the previous window Ctrl+b n : Go to the next window Ctrl+b N : Go to the N th window Session commands In Tmux Ctrl+b d : Detach from current session Outside Tmux tmux ls : List sessions with session names tmux a -t <session-name> : Attach to session with session-name Links and Resources Quick Guide by Ham Vocke Missing Semester Tmux","title":"Tmux"},{"location":"tmux_intro/#tmux","text":"","title":"Tmux"},{"location":"tmux_intro/#why","text":"Ability to open multiple terminals in a single window without having to ssh multiple times. Ability to detach without stopping a running process.","title":"Why"},{"location":"tmux_intro/#installation","text":"sudo apt install tmux","title":"Installation"},{"location":"tmux_intro/#basic-usage","text":"tmux in a terminal At the bottom, you can see your session name (e.g., [0] ), and your window name (e.g., 3: bash ). There are sessions, windows, and panes. Sessions are browser windows Windows are like browser tabs Panes split windows","title":"Basic Usage"},{"location":"tmux_intro/#useful-commands","text":"All commands will be Ctrl+B and another key. You can tell what pane you are in by the borders being not white.","title":"Useful Commands"},{"location":"tmux_intro/#pane-commands","text":"Ctrl+b % : Split window horizontally Ctrl+b \" : Split window vertically Ctrl+b <direction> : Move between panes in the specific direction using arrow keys Ctrl+b z : Zoom in/out of a pane Ctrl+b [ : Start scrollback in pane Ctrl+b x : Remove current pane, will ask for Y/N in the bottom status bar","title":"Pane commands"},{"location":"tmux_intro/#window-commands","text":"Ctrl+b c : Create a new window Ctrl+b p : Go to the previous window Ctrl+b n : Go to the next window Ctrl+b N : Go to the N th window","title":"Window commands"},{"location":"tmux_intro/#session-commands","text":"","title":"Session commands"},{"location":"tmux_intro/#in-tmux","text":"Ctrl+b d : Detach from current session","title":"In Tmux"},{"location":"tmux_intro/#outside-tmux","text":"tmux ls : List sessions with session names tmux a -t <session-name> : Attach to session with session-name","title":"Outside Tmux"},{"location":"tmux_intro/#links-and-resources","text":"Quick Guide by Ham Vocke Missing Semester Tmux","title":"Links and Resources"},{"location":"vim_intro/","text":"Vim Why Fast and useful command line editor. Lightweight compared to VSCode. Everything is on keyboard. No need for a mouse. So you can stop using Nano and trap your friends in Vim :) Installation sudo apt install vim Basic Usage vim <file-name> in a terminal Main editing modes: 1. Normal mode 2. Insert mode 3. Visual mode 4. Visual line mode 5. Visual block Normal Mode Where you can move around, navigate, and quickly edit things. You will be in this mode mostly. Insert Mode When you need to type. Visual mode When you need to select a part of a line. Visual line mode When you need to select multiple lines Visual block mode When you need to select things as a block Moving between modes ESC to go back to normal mode from the different modes. i from normal to insert mode. v from normal to visual mode. shift+v from normal to visual line mode. crtl+v from normal to visual block mode. Normal Mode File Navigation h : move cursor left j : move cursor down k : move cursor up l : move cursor right b : move the cursor back a word w : move cursor to next word e : move the cursor to the end of the word More advanced navigation 0 : move to beginning of line ^ : move to the first non-whitespace character of a line $ : move to last character in line gg : move to beginning of file G : move to end of file f<char> : move cursor to next occurrence of (Remember f is find ) t<char> : move cursor to before next occurrence of (Remember t is goto ) F<char> : move cursor to previous occurrence of T<char> : move cursor to after previous occurrence of Can be used with numbers before to repeat that navigation, e.g., 4j moves down 4 lines. Action Keys Action keys are normally mixed with Navigation keys to specify where to apply the action. Numbers can be used here as well. Ex. d4w will delete the next 4 words d : delete c : change (delete + insert mode) y : copy (yank) p : paste the last thing copied or deleted with d , c , or x and more. x : delete current character r : replace current character with the next character input. Doesn't go to insert mode. Useful Shortcuts dd : delete entire line cc : same as dd but put into insert mode after yy : copy entire line (yank) u : Undo Crtl+r : Redo Insert Mode i : insert before cursor I : insert at the beginning of line a : insert after cursor (Remember with append) A : insert at end of line Searching /<characters-to-search> : Hit enter to perform search. n to find next occurrence, N to find previous occurrence. :s/<characters-to-find-and-replace>/<characters-that-will-replace> : will only do it once for current line. Use :s/.../.../g to replace all occurrences in a line. Use :%s/.../... to replace first occurrence in each line of file. Use :%s/.../.../g to replace all occurrences. Save and Quit (HELP HOW DO I GET OUT OF VIM) More traditionally you will do the following: :w : will write and save the file :q : will quit the file :wq : will write and quit Less traditionally: ZZ : will write and quit Additional Notes Additionally, practice installing the Vim extension in VSCode. Vim is much more powerful than just a basic text editor. There are other commands in Neovim. You can make macros and other commands to make your workflow faster. Links and Resources A non-exhaustive list of Vim learning resources: Vim practice Vim game Vim cheatsheet Missing Semester Vim vimtutor in terminal has tutorial","title":"Vim"},{"location":"vim_intro/#vim","text":"","title":"Vim"},{"location":"vim_intro/#why","text":"Fast and useful command line editor. Lightweight compared to VSCode. Everything is on keyboard. No need for a mouse. So you can stop using Nano and trap your friends in Vim :)","title":"Why"},{"location":"vim_intro/#installation","text":"sudo apt install vim","title":"Installation"},{"location":"vim_intro/#basic-usage","text":"vim <file-name> in a terminal Main editing modes: 1. Normal mode 2. Insert mode 3. Visual mode 4. Visual line mode 5. Visual block","title":"Basic Usage"},{"location":"vim_intro/#normal-mode","text":"Where you can move around, navigate, and quickly edit things. You will be in this mode mostly.","title":"Normal Mode"},{"location":"vim_intro/#insert-mode","text":"When you need to type.","title":"Insert Mode"},{"location":"vim_intro/#visual-mode","text":"When you need to select a part of a line.","title":"Visual mode"},{"location":"vim_intro/#visual-line-mode","text":"When you need to select multiple lines","title":"Visual line mode"},{"location":"vim_intro/#visual-block-mode","text":"When you need to select things as a block","title":"Visual block mode"},{"location":"vim_intro/#moving-between-modes","text":"ESC to go back to normal mode from the different modes. i from normal to insert mode. v from normal to visual mode. shift+v from normal to visual line mode. crtl+v from normal to visual block mode.","title":"Moving between modes"},{"location":"vim_intro/#normal-mode_1","text":"","title":"Normal Mode"},{"location":"vim_intro/#file-navigation","text":"h : move cursor left j : move cursor down k : move cursor up l : move cursor right b : move the cursor back a word w : move cursor to next word e : move the cursor to the end of the word","title":"File Navigation"},{"location":"vim_intro/#more-advanced-navigation","text":"0 : move to beginning of line ^ : move to the first non-whitespace character of a line $ : move to last character in line gg : move to beginning of file G : move to end of file f<char> : move cursor to next occurrence of (Remember f is find ) t<char> : move cursor to before next occurrence of (Remember t is goto ) F<char> : move cursor to previous occurrence of T<char> : move cursor to after previous occurrence of Can be used with numbers before to repeat that navigation, e.g., 4j moves down 4 lines.","title":"More advanced navigation"},{"location":"vim_intro/#action-keys","text":"Action keys are normally mixed with Navigation keys to specify where to apply the action. Numbers can be used here as well. Ex. d4w will delete the next 4 words d : delete c : change (delete + insert mode) y : copy (yank) p : paste the last thing copied or deleted with d , c , or x and more. x : delete current character r : replace current character with the next character input. Doesn't go to insert mode.","title":"Action Keys"},{"location":"vim_intro/#useful-shortcuts","text":"dd : delete entire line cc : same as dd but put into insert mode after yy : copy entire line (yank) u : Undo Crtl+r : Redo","title":"Useful Shortcuts"},{"location":"vim_intro/#insert-mode_1","text":"i : insert before cursor I : insert at the beginning of line a : insert after cursor (Remember with append) A : insert at end of line","title":"Insert Mode"},{"location":"vim_intro/#searching","text":"/<characters-to-search> : Hit enter to perform search. n to find next occurrence, N to find previous occurrence. :s/<characters-to-find-and-replace>/<characters-that-will-replace> : will only do it once for current line. Use :s/.../.../g to replace all occurrences in a line. Use :%s/.../... to replace first occurrence in each line of file. Use :%s/.../.../g to replace all occurrences.","title":"Searching"},{"location":"vim_intro/#save-and-quit-help-how-do-i-get-out-of-vim","text":"More traditionally you will do the following: :w : will write and save the file :q : will quit the file :wq : will write and quit Less traditionally: ZZ : will write and quit","title":"Save and Quit (HELP HOW DO I GET OUT OF VIM)"},{"location":"vim_intro/#additional-notes","text":"Additionally, practice installing the Vim extension in VSCode. Vim is much more powerful than just a basic text editor. There are other commands in Neovim. You can make macros and other commands to make your workflow faster.","title":"Additional Notes"},{"location":"vim_intro/#links-and-resources","text":"A non-exhaustive list of Vim learning resources: Vim practice Vim game Vim cheatsheet Missing Semester Vim vimtutor in terminal has tutorial","title":"Links and Resources"}]}